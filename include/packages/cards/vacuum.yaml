vacuum:
  vacuum:
    - platform: xiaomi_miio
      host: !secret S50_IP
      token: !secret S50_TOKEN
      name: R2-D2

  var:
    # String with room numbers sychronized with the list of roomnames
    vacuum_room_ids:
      initial_value: "17,18,16,22,23,21,25,26,28,27,19,24,29,30"

    # Work in progress - not in use currently
    # String with room sizes sychronized with the list of roomnames
    vacuum_room_size:
      initial_value: "33,13,0,37,28,26,6,9,0,0,0,0,0,0"

    # default fan speed
    vacuum_default_fanspeed:
      initial_value: "102"

  sensor:
    - platform: template
      sensors:
        vacuum_battery:
          entity_id: vacuum.r2_d2
          friendly_name: Batteri
          unit_of_measurement: "%"
          value_template: "{{ state_attr('vacuum.r2_d2', 'battery_level') }}"
          icon_template: "{{ state_attr('vacuum.r2_d2', 'battery_icon') }}"
  
        vacuum_fan_speed:
          entity_id: sensor.vacuum_r2_d2
          friendly_name_template: "{{ state_attr('sensor.vacuum_r2_d2', 'fan_speed') }}"
          value_template: "{{ state_attr('sensor.vacuum_r2_d2', 'fan_speed_index') }}"

        vacuum_r2_d2:
          entity_id: vacuum.r2_d2
          friendly_name_template: >-
            {{ state_attr("vacuum.r2_d2", "friendly_name") }}
          # icon_template: >-
          #   {{ state_attr("vacuum.r2_d2", "battery_icon") }}
          value_template: >-
            {%- if is_state("vacuum.r2_d2", "docked") -%}
              I dock
            {%- elif is_state("vacuum.r2_d2", "cleaning") -%}
              Støvsuger
            {%- elif is_state("vacuum.r2_d2", "paused") -%}
              Pause
            {%- elif is_state("vacuum.r2_d2", "idle") -%}
              Tomgang
            {%- elif is_state("vacuum.r2_d2", "Charger disconnected") -%}
              Lader ikke
            {%- else -%}
              Ukendt
            {%- endif -%}
          attribute_templates:
            fan_speed_index: >-
              {%- for needle in state_attr('vacuum.r2_d2', 'fan_speed_list') %}
                {%- if needle == state_attr("vacuum.r2_d2", "fan_speed") %}
                  {{ loop.index0 }}
                {% endif %}
              {%- endfor %}
            fan_speed_num: >-
              {%- for needle in state_attr('vacuum.r2_d2', 'fan_speed_list') %}
                {%- if needle == state_attr("vacuum.r2_d2", "fan_speed") %}
                  10{{ loop.index }}
                {% endif %}
              {%- endfor %}
            fan_speed: >-
              {% set ns = namespace(index=0) -%}
              {%- for needle in state_attr('vacuum.r2_d2', 'fan_speed_list') %}
                {%- if needle == state_attr("vacuum.r2_d2", "fan_speed") %}
                  {% set ns.index = loop.index0 %}
                {% endif %}
              {%- endfor %}
              {{ state_attr('input_select.vacuum_power', "options")[ns.index] }}
            status: >-
              {%- if is_state_attr("vacuum.r2_d2", "status", "Charging") and is_state_attr("vacuum.r2_d2", "battery_level", 100) -%}
                Opladt
              {%- elif is_state_attr("vacuum.r2_d2", "status", "Charging") -%}
                Oplader
              {%- elif is_state_attr("vacuum.r2_d2", "status", "Segment cleaning") -%}
                Støvsuger i et rum
              {%- elif is_state_attr("vacuum.r2_d2", "status", "Returning home") -%}
                Kører hjem
              {%- elif is_state_attr("vacuum.r2_d2", "status", "Cleaning") -%}
                Støvsuger huset
              {%- elif is_state_attr("vacuum.r2_d2", "status", "Going to target") -%}
                Kører hen til målet
              {%- else -%}
                {{ state_attr("vacuum.r2_d2", "status") }}
              {%- endif -%}

  switch:
    - platform: template
      switches:
        vacuum_dnd:
          friendly_name: "DND støvsuger "
          value_template: "{{ state_attr('vacuum.r2_d2', 'do_not_disturb') }}"
          turn_on:
            service: script.vacuum_save_dnd
          turn_off:
            service: rest_command.vacuum_command
            data:
              entity: vacuum.r2_d2
              command: close_dnd_timer

  input_select:
    vacuum_room:
      name: "Vælg rum"
      icon: mdi:floor-plan
      options:
        - Køkken
        - Legeværelse
        - Soveværelse
        - Stuen
        - Indgang
        - Gangen
        - Lille badeværelse
        - Stort badeværelse
        - Colins værelse
        - Emilios værelse
        - Williams værelse
        - Pigernes stue m.m.
        - Nathalies værelse
        - Cornelies værelse

    vacuum_power:
      name: "Vælg sugestyrke"
      icon: mdi:fan
      options:
        - Stille
        - Standard
        - Medium
        - Turbo

  input_datetime:
    vacuum_dnd_start:
      name: Vacuum DND start
      has_date: false
      has_time: true
      initial: "22:00"
    vacuum_dnd_end:
      name: Vacuum DND end
      has_date: false
      has_time: true
      initial: "08:00"

  script:
    # Save DND timer
    vacuum_save_dnd:
      alias: "Gem DND timer"
      sequence:
        - service: rest_command.vacuum_command
          data_template:
            entity: vacuum.r2_d2
            command: set_dnd_timer
            params: >-
              {%- set start_h = states('input_datetime.vacuum_dnd_start')[1:2] if states('input_datetime.vacuum_dnd_start')[:2].startswith('0') else states('input_datetime.vacuum_dnd_start')[:2] -%}
              {%- set start_m = states('input_datetime.vacuum_dnd_start')[4:-3] if states('input_datetime.vacuum_dnd_start')[3:-3].startswith('0') else states('input_datetime.vacuum_dnd_start')[3:-3] -%}
              {%- set end_h = states('input_datetime.vacuum_dnd_end')[1:2] if states('input_datetime.vacuum_dnd_end')[:2].startswith('0') else states('input_datetime.vacuum_dnd_end')[:2] -%}
              {%- set end_m = states('input_datetime.vacuum_dnd_end')[4:-3] if states('input_datetime.vacuum_dnd_end')[3:-3].startswith('0') else states('input_datetime.vacuum_dnd_end')[3:-3] -%}
              {{ start_h }}, {{ start_m }}, {{ end_h }}, {{ end_m }}

    # Start room-cleaning
    vacuum_room_start:
      alias: "Støvsug rum"
      sequence:
        - service: rest_command.vacuum_command
          data_template:
            entity: vacuum.r2_d2
            command: app_segment_clean
            # Find the selected room and use the index to find the room number
            params: >-
              {%- for room in state_attr("input_select.vacuum_room", "options") -%}
                {%- if room == states("input_select.vacuum_room") -%}
                  {{ states("var.vacuum_room_ids").split(",")[loop.index0] }}
                {%- endif %}
              {%- endfor %}
        # Just in case we have a open popup - close it
        - service: browser_mod.close_popup
    
    # Drive the vacuum near dustbin for service
    vacuum_service:
      alias: "Kør R2-D2 ud i køkkenet"
      sequence:
        - service: vacuum.send_command
          data:
            entity_id: vacuum.r2_d2
            command: app_goto_target
            params: [20000,30500]
        - wait_template: "{{ is_state('vacuum.r2_d2', 'idle') }}"
        - service: tts.google_translate_say
          data_template:
            entity_id: media_player.kokken
            message: >-
              "{{ state_attr("vacuum.r2_d2", "friendly_name") }} er klar til at blive serviceret..."

  rest_command:
    vacuum_command:
      url: !secret VACUUM_API
      method: POST
      headers:
        authorization: !secret VACUUM_API_TOKEN
        accept: 'application/json'
      payload: '{ "entity_id": "{{ entity }}", "command": "{{ command }}", "params": [{{ params }}] }'
      content_type: 'application/json'

  automation:
    # The DND has changed - send it to the vacuum
    - alias: "Skift DND på støvsugeren"
      trigger:
        platform: state
        entity_id:
          - input_datetime.vacuum_dnd_start
          - input_datetime.vacuum_dnd_end
      action:
        - service: script.vacuum_save_dnd

    # Send the new suction setting to the vacuum
    - alias: "Skift sugestyrke på støvsugeren"
      trigger:
        # Trigger - when a suction setting is choosen
        platform: state
        entity_id: input_select.vacuum_power
      action:
        - service: vacuum.set_fan_speed
          data_template:
            entity_id: vacuum.r2_d2
            # Find the index of the selected option (index starting from 1)
            # Append this digit to 10 - ex. 101
            fan_speed: >-
              {% for needle in state_attr("input_select.vacuum_power", "options") %}
                {% if needle == states("input_select.vacuum_power") %}
                  10{{ loop.index }}
                {% endif %}
              {%- endfor %}
        - service: homeassistant.update_entity
          data:
            entity_id: sensor.vacuum_fan_speed

    # We have changed the suction settings in the app
    # and wish to match the new setting
    - alias: "Match suge-menuen til støvsugeren"
      trigger:
        # Trigger - new suction
        - platform: state
          entity_id: sensor.vacuum_fan_speed
      action:
        - service: input_select.select_option
          data_template:
            entity_id: input_select.vacuum_power
            # Get the last digit of the vacuums settings ( ex. 103 = 3 )
            # Substract 1 and use this value as index on the options
            option: >-
              {%- for needle in state_attr('vacuum.r2_d2', 'fan_speed_list') %}
                {%- if needle == state_attr("vacuum.r2_d2", "fan_speed") %}
                {{ state_attr("input_select.vacuum_power", "options")[ loop.index0] }}
                {% endif %}
              {%- endfor %}
#        - service: homeassistant.update_entity
#          data:
#            entity_id: sensor.vacuum_fan_speed

    # Set default fanspeed at startup
    - alias: "Indstil støvsugeren"
      trigger:
        - platform: homeassistant
          event: start
      action:
        - service: input_datetime.set_datetime
          data_template:
            entity_id: input_datetime.vacuum_dnd_start
            time: "{{ state_attr('vacuum.r2_d2', 'do_not_disturb_start') }}"
        - service: input_datetime.set_datetime
          data_template:
            entity_id: input_datetime.vacuum_dnd_end
            time: "{{ state_attr('vacuum.r2_d2', 'do_not_disturb_end') }}"
        - service: vacuum.set_fan_speed
          data_template:
            entity_id: vacuum.r2_d2
            # Send default fan speed to vacuum
            fan_speed: "{{ states('var.vacuum_default_fanspeed') | int }}"
        - delay: "00:00:20"
        - service: automation.trigger
          data_template:
            entity_id: automation.match_suge_menuen_til_stovsugeren